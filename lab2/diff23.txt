--- ovf2.s	2016-10-24 17:32:19.922800000 -0700
+++ ovf3.s	2016-10-24 17:32:46.292214000 -0700
@@ -6,59 +6,17 @@
 testovf:
 .LFB0:
 	.cfi_startproc
-	pushq	%rbp
-	.cfi_def_cfa_offset 16
-	.cfi_offset 6, -16
-	pushq	%rbx
-	.cfi_def_cfa_offset 24
-	.cfi_offset 3, -24
-	movabsq	$9223372036854775807, %rdx
-	subq	$8, %rsp
-	.cfi_def_cfa_offset 32
-	movq	big(%rip), %rbx
-	movq	%rbx, %rbp
-	addq	%rdx, %rbp
-	jo	.L6
-.L2:
-	cmpq	%rbp, %rbx
+	movq	big(%rip), %rdx
+	movabsq	$9223372036854775807, %rax
+	addq	%rdx, %rax
+	cmpq	%rax, %rdx
 	setg	%al
-	addq	$8, %rsp
-	.cfi_remember_state
-	.cfi_def_cfa_offset 24
-	popq	%rbx
-	.cfi_def_cfa_offset 16
-	popq	%rbp
-	.cfi_def_cfa_offset 8
 	ret
-.L6:
-	.cfi_restore_state
-	movq	%rbx, %rsi
-	movl	$.Lubsan_data0, %edi
-	call	__ubsan_handle_add_overflow
-	jmp	.L2
 	.cfi_endproc
 .LFE0:
 	.size	testovf, .-testovf
-	.section	.rodata.str1.1,"aMS",@progbits,1
-.LC0:
-	.string	"ovf.c"
-	.data
-	.align 16
-	.type	.Lubsan_data0, @object
-	.size	.Lubsan_data0, 24
-.Lubsan_data0:
-	.quad	.LC0
-	.long	8
-	.long	14
-	.quad	.Lubsan_type0
-	.align 2
-	.type	.Lubsan_type0, @object
-	.size	.Lubsan_type0, 15
-.Lubsan_type0:
-	.value	0
-	.value	13
-	.string	"'long int'"
 	.globl	big
+	.data
 	.align 8
 	.type	big, @object
 	.size	big, 8
